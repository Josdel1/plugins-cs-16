/* Plugin generated by AMXX-Studio */

#include <amxmodx>
#include <amxmisc>

enum _:ADM_DATA { ADMIN_TYPE[ 30 ], ADMIN_FLAGS }

new const Admins[][ADM_DATA] =
{
	{ "OG. DUEÃ‘@ ~>", ADMIN_BAN_TEMP },
	{ "OG. VIP ~>", ADMIN_LEVEL_F },
	{ "OG. VIP ~>", ADMIN_LEVEL_E },
	{ "OG. VIP ~>", ADMIN_LEVEL_D },
	{ "OG. VIP ~>", ADMIN_LEVEL_C },
	{ "OG. VIP ~>", ADMIN_LEVEL_B },
	{ "OG. VIP ~>", ADMIN_LEVEL_A }
};

new kAdminType[ 33 ][ 30 ], kMP, kPN[ 33 ][ 32 ], saytext;

public plugin_init() 
{
	register_plugin( "Admin Say n Types" , "1.0" , "kikizon" );
    
	register_clcmd("say", "BlockSay")
	register_clcmd("say_team", "BlockTeamSay")
    
	kMP = get_maxplayers();
	
	saytext = get_user_msgid("SayText");
	register_message(saytext, "avoid_duplicated")
}
public avoid_duplicated(msgId, msgDest, receiver) return PLUGIN_HANDLED
public client_putinserver( index )
{
	get_user_name( index, kPN[ index ], 31 );
	kAdminType[ index ] = "^0";
    
	if(is_user_admin( index ))
	{
		static i, flags; flags = get_user_flags( index );
        
		for(i = 0 ; i < sizeof Admins ; i++ ) 
		{
			if(flags & Admins[i][ADMIN_FLAGS])
			{                    
				copy(kAdminType[index], charsmax(kAdminType), Admins[i][ADMIN_TYPE]);
				break;
			}
		}
	}    
}

public BlockSay( index )
{
	static said[191];
	read_args(said, charsmax(said));
	remove_quotes(said);
	replace_all(said, charsmax(said), "%", " "); replace_all(said, charsmax(said), "#", " ");
        
	if (!ValidMessage(said, 1)) return PLUGIN_CONTINUE;
    
	static color[11], prefix[91]
	get_user_team(index, color, charsmax(color))
    
	formatex(prefix, charsmax(prefix), "%s^x04%s^x03 %s", 
	is_user_alive( index ) ? "^x01" : "^x01*MUERTO* ",  kAdminType[ index ], kPN[ index ])
    
	if (is_admin_prefix(index)) format(said, charsmax(said), "^x03%s", said)    
    
	format(said, charsmax(said), "%s^x01 :  %s", prefix, said)
    
	static i, team[11];
	for (i = 1; i <= kMP; i++)
	{
		if( is_user_connected( i ))
		{        
			get_user_team(i, team, charsmax(team))            
			changeTeamInfo(i, is_admin_prefix(index) ? "SPECTATOR" : color)            
			writeMessage(i, said)
			changeTeamInfo(i, team)
		}
	}
        
	return PLUGIN_HANDLED_MAIN;
}

public BlockTeamSay( index )
{
	static said[191];
	read_args(said, charsmax(said));
	remove_quotes(said);
	replace_all(said, charsmax(said), "%", " "); replace_all(said, charsmax(said), "#", " ");
        
	if (!ValidMessage(said, 1)) return PLUGIN_CONTINUE;
    
	static playerTeam, teamname[19];
	playerTeam = get_user_team(index);
    
	switch (playerTeam)
	{
		case 1: formatex( teamname, 18, " ^x01[^x03TT^x01] ");
		case 2: formatex( teamname, 18, " ^x01[^x03CT^x01] ");
		default: formatex( teamname, 18, " ^x01[^x03SPEC^x01] ");
	}
    
	static color[11], prefix[91]
	get_user_team(index, color, charsmax(color))
    
	formatex(prefix, charsmax(prefix), "%s%s^x04%s^x03 %s", 
	is_user_alive( index ) ? "^x01" : "^x01*MUERTO* ",  teamname, kAdminType[ index ], kPN[ index ])
    
	if (is_admin_prefix(index)) format(said, charsmax(said), "^x03%s", said)    
	
	format(said, charsmax(said), "%s^x01 :  %s", prefix, said)
    
	static i, team[11];
	for (i = 1; i <= kMP; i++)
	{
		if (!is_user_connected(i)) continue;
        
		if (get_user_team(i) == playerTeam)
		{
			if( is_user_connected(i))
			{        
				get_user_team(i, team, charsmax(team))            
				changeTeamInfo(i, is_admin_prefix(index) ? "SPECTATOR" : color)            
				writeMessage(i, said)
				changeTeamInfo(i, team)
			}
		}
	}
    
	return PLUGIN_HANDLED_MAIN;
}

public changeTeamInfo(player, team[])
{
	message_begin(MSG_ONE, get_user_msgid( "TeamInfo" ), _, player)
	write_byte(player)
	write_string(team)
	message_end()
}

public writeMessage(player, message[])
{
	message_begin(MSG_ONE, saytext, {0, 0, 0}, player)
	write_byte(player)
	write_string(message)
	message_end()
}

public is_admin_prefix(id) {
	new admin = 0;
	new userflags = get_user_flags(id)
	
	if(userflags & ADMIN_BAN_TEMP || userflags & ADMIN_LEVEL_A || userflags & ADMIN_LEVEL_B || userflags & ADMIN_LEVEL_C || 
	userflags & ADMIN_LEVEL_D || userflags & ADMIN_LEVEL_E || userflags & ADMIN_LEVEL_F || userflags & ADMIN_LEVEL_G) admin = 1;
    
	return admin;
} 

stock ValidMessage(text[], maxcount) 
{
	static len, i, count;
	len = strlen(text);
	count = 0;
    
	if (!len) return false;
    
	for (i = 0; i < len; i++) 
	{
		if (text[i] != ' ') 
		{
			count++
			if (count >= maxcount)
				return true;
		}
	}
    
	return false;
} 
